{"version":3,"sources":["uni-app:///main.js",null,"webpack:///D:/sign/familySign/pages/im/privateChat.vue?8713","webpack:///D:/sign/familySign/pages/im/privateChat.vue?3755","webpack:///D:/sign/familySign/pages/im/privateChat.vue?144a","uni-app:///pages/im/privateChat.vue","webpack:///D:/sign/familySign/pages/im/privateChat.vue?adce","webpack:///D:/sign/familySign/pages/im/privateChat.vue?90ce"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","name","data","text","friend","to","currentUser","emoji","url","map","visible","decoder","otherTypesMessagePanelVisible","orderList","orders","history","messages","allLoaded","loading","recorderManager","audio","audioPlayer","innerAudioContext","playingMessage","videoPlayer","context","actionPopup","message","recallable","messageSelector","onLoad","console","uni","id","type","avatar","onShow","onReady","title","onPullDownRefresh","onUnload","GoEasy","methods","renderTextMessage","renderMessageDate","initGoEasyListeners","onMessageReceived","onMessageDeleted","deletedMessages","initialAudioPlayer","initRecorderListeners","icon","duration","file","notification","body","sound","badge","onProgress","onSuccess","onFailed","getImageHeight","sendMessage","sendTextMessage","sendVideoMessage","success","sendImageMessage","count","res","sendOrderMessage","payload","showActionPopup","hideActionPopup","deleteSingleMessage","content","deleteMultipleMessages","deleteMessage","recallMessage","editRecalledMessage","showCheckBox","selectMessages","selectedMessages","loadHistoryMessage","lastMessageTimeStamp","userId","lastTimestamp","limit","switchAudioKeyboard","onRecordStart","onRecordEnd","showImageFullScreen","urls","playVideo","direction","playAudio","onVideoFullScreenChange","messageInputFocusin","switchEmojiKeyboard","showOtherTypesMessagePanel","chooseEmoji","showOrderMessageList","hideOrderMessageList","privateCall","itemList","GRTC","calleeId","mediaType","fail","scrollToBottom","scrollTop","markPrivateMessageAsRead"],"mappings":";;;;;;;;;;;;;AAAA;AAE2D;AAC3D;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,oBAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwH;AACxH;AAC+D;AACL;AACa;;;AAGvE;AACqM;AACrM,gBAAgB,8MAAU;AAC1B,EAAE,iFAAM;AACR,EAAE,sFAAM;AACR,EAAE,+FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,0FAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAqwB,CAAgB,0xBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;ACwLzxB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAAA,eACA;EACAC;EACAC;IACA;IACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACA;MACA;MACAC;MACAC;MACAC;MAAA;MACAC;MAEA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACA;MACAC;MACAC;QACAC;QACAJ;MACA;MACAK;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;QACA;QACAV;MACA;MACAW;QACAC;QACAC;MACA;MACAC;QACAd;QACAF;QACAiB;MACA;MACA;MACAC;QACAhB;QACAiB;QACAC;MACA;MACA;MACAC;QACAnB;QACAM;MACA;IACA;EACA;EACAc;IACA;IACA;IACAC;IACAC;IACA;IACAD;IACA;MACAE;MACAC;MACAhC;QACAD;QACAkC;MACA;IACA;IAEA;IACA;IACA;IACA;IACA;EACA;EACAC;IACA;IACA;EACA;EACAC;IACA;IACA;IACA;IACAL;MAAAM;IAAA;EACA;EACAC;IACA;EACA;EACAC;IACA;IACAC;IACAA;EACA;EACAC;IACA;IACA;IACAC;MACA;IACA;IACA;IACA;IACAC;MACA;QACA;MACA;QACA;UACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACAJ;MACA;MACAA;IACA;IACAK;MACA;MACA;MACA;MACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACAC;MAAA;MACAC;QACA;QACA;QACA;QACA;UACA;UACA;YACA;UACA;QACA;MACA;IACA;IACAC;MAAA;MACA;MACA;QACA;MACA;MACA;QACA;MACA;IACA;IACAC;MAAA;MACA/B;QACA;UACAa;YACAmB;YACAb;YACAc;UACA;UACA;QACA;QACAX;UACApC;UACAgD;UACAC;YACAhB;YACAiB;YAAA;YACAC;YACAC;UACA;UACAC;YACA3B;UACA;UACA4B;YACA;UACA;UACAC;YACA7B;UACA;QACA;MACA;IACA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA8B;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACArB;QACAd;QACAgC;UACA5B;QACA;QACA6B;UACA;YACA7B;UACA;YACAA;UACA;QACA;MACA;IACA;IACAgC;MAAA;MACA;QACA;QACA;UACAR;QACA;QACAd;UACAtC;UACAE;UACAiD;YACAhB;YACAiB;YACAC;YACAC;UACA;UACAE;YACA;UACA;UACAC;YACA7B;UACA;QACA;MACA;MACA;IACA;IACAiC;MAAA;MACAhC;QACAiC;UACAxB;YACApC;YACAgD;YACAC;cACAhB;cACAiB;cAAA;cACAC;cACAC;YACA;YACAC;cACA3B;YACA;YACA4B;cACA;cACA;YACA;YACAC;cACA7B;YACA;UACA;QACA;MACA;IACA;IACAmC;MAAA;MACAlC;QACAmC;QACAF;UACAG;YACA3B;cACApC;cACAgD;cACAC;gBACAhB;gBACAiB;gBAAA;gBACAC;gBACAC;cACA;cACAC;gBACA3B;cACA;cACA4B;gBACA;gBACA;cACA;cACAC;gBACA7B;cACA;YACA;UACA;QACA;MACA;IACA;IACAsC;MAAA;MACA;MACA5B;QACAP;QACAoC;QACAjE;QACAiD;UACAhB;UACAiB;UACAC;UACAC;QACA;QACAE;UACA;UACA;QACA;QACAC;UACA7B;QACA;MACA;MACA;IACA;IACAwC;MACA;MACA;MACA;QACA;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MAAA;MACAzC;QACA0C;QACAT;UACA;UACA;YACA;UACA;QACA;MACA;IACA;IACAU;MAAA;MACA;QACA3C;UACA0C;UACAT;YACA;YACA;cACA;YACA;UACA;QACA;MACA;IACA;IACAW;MAAA;MACAnC;QACAzB;QACA2C;UACA;YACA;YACA;cACA;YACA;UACA;UACA;QACA;QACAC;UACA7B;QACA;MACA;IACA;IACA8C;MACA;MACApC;QACAzB;QACA2C;UACA5B;QACA;QACA6B;UACA7B;QACA;MACA;IACA;IACA+C;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;QACA;UACAC;QACA;MACA;MACA;IACA;IACAC;MAAA;MAAA;MACA;MACA;MACA;MACA;QACAC;MACA;MACA1C;QACA2C;QACAC;QACAC;QACA3B;UACA3B;UACA;UACA;UACA;YACA;UACA;YACA;cACA;YACA;cACA;YACA;YACA;cACA;YACA;YACA;cACA;cACA;cACA;YACA;UACA;QACA;QACA4B;UACA;UACA7B;UACAC;UACA;QACA;MACA;IACA;IACA;IACAuD;MACA;MACA;QACApE;UACAY;QACA;UACAA;UACAC;YACAM;YACAoC;UACA;QACA;MACA;IACA;IACAc;MACArE;IACA;IACAsE;MACAtE;IACA;IACAuE;MACA;MACA1D;QACA2D;MACA;IACA;IACAC;MAAA;MACA;MACA;MACA;QACA;UACAC;QACA;QACA;MACA;IACA;IACAC;MACA;MAEA;QACA;QACA;QACA;UACA;QACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MACAtE;QACAuE;QACAtC;UACA;UACA;UACAuC;YACAC;YACAC;YACApD;cACAhB;cACAiB;cACAC;cACAC;YACA;UACA;YACAzB;cACAxB;YACA;UACA;YACAuB;YACAC;cACAmB;cACAb;cACAc;YACA;UACA;QACA;QACAuD;UACA5E;QACA;MACA;IACA;IACA6E;MACA;QACA5E;UACA6E;UACAzD;QACA;MACA;IACA;IACA0D;MACArE;QACAR;QACAC;QACAyB;UACA5B;QACA;QACA6B;UACA7B;QACA;MACA;IACA;EACA;AACA;AAAA,2B;;;;;;;;;;;;;ACvxBA;AAAA;AAAA;AAAA;AAAulC,CAAgB,ilCAAG,EAAC,C;;;;;;;;;;;ACA3mC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/im/privateChat.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;import '@dcloudio/uni-stat/dist/uni-cloud-stat.es.js';\nimport Vue from 'vue'\nimport Page from './pages/im/privateChat.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./privateChat.vue?vue&type=template&id=6b99006e&\"\nvar renderjs\nimport script from \"./privateChat.vue?vue&type=script&lang=js&\"\nexport * from \"./privateChat.vue?vue&type=script&lang=js&\"\nimport style0 from \"./privateChat.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/im/privateChat.vue\"\nexport default component.exports","export * from \"-!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--17-0!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./privateChat.vue?vue&type=template&id=6b99006e&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var l0 = _vm.__map(_vm.history.messages, function (message, index) {\n    var $orig = _vm.__get_orig(message)\n    var m0 = _vm.renderMessageDate(message, index)\n    var g0 =\n      message.recalled && message.recaller.id === _vm.currentUser.id\n        ? message.type === \"text\" && Date.now() - message.timestamp < 60 * 1000\n        : null\n    var g1 = !message.recalled\n      ? _vm.messageSelector.messages.includes(message)\n      : null\n    var m1 =\n      !message.recalled && message.type === \"text\"\n        ? _vm.renderTextMessage(message)\n        : null\n    var m2 =\n      !message.recalled && message.type === \"video\"\n        ? _vm.getImageHeight(\n            message.payload.thumbnail.width,\n            message.payload.thumbnail.height\n          )\n        : null\n    var g2 =\n      !message.recalled && message.type === \"file\"\n        ? (message.payload.size / 1024).toFixed(2)\n        : null\n    var g3 =\n      !message.recalled && message.type === \"audio\"\n        ? Math.ceil(message.payload.duration)\n        : null\n    var g4 =\n      !message.recalled && message.type === \"audio\"\n        ? Math.ceil(message.payload.duration) || 1\n        : null\n    return {\n      $orig: $orig,\n      m0: m0,\n      g0: g0,\n      g1: g1,\n      m1: m1,\n      m2: m2,\n      g2: g2,\n      g3: g3,\n      g4: g4,\n    }\n  })\n  var l1 =\n    !_vm.videoPlayer.visible &&\n    !_vm.messageSelector.visible &&\n    _vm.emoji.visible\n      ? _vm.__map(_vm.emoji.map, function (emojiItem, emojiKey, index) {\n          var $orig = _vm.__get_orig(emojiItem)\n          return {\n            $orig: $orig,\n            $index: index,\n          }\n        })\n      : null\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        l0: l0,\n        l1: l1,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./privateChat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./privateChat.vue?vue&type=script&lang=js&\"","<template>\r\n  <view class=\"chatInterface\" @contextmenu.prevent=\"\">\r\n    <view class=\"scroll-view\">\r\n      <image v-if=\"history.loading\" class=\"history-loaded\" src=\"http://182.61.31.42:1001/static/images/loading.svg\"/>\r\n      <view v-else :class=\"history.allLoaded ? 'history-loaded':'load'\" @click=\"loadHistoryMessage(false)\">\r\n        <view>{{ history.allLoaded ? '已经没有更多的历史消息' : '点击获取历史消息' }}</view>\r\n      </view>\r\n\r\n      <checkbox-group @change=\"selectMessages\">\r\n        <!--消息记录-->\r\n        <view v-for=\"(message,index) in history.messages\" :key=\"message.messageId\">\r\n          <!--时间显示，类似于微信，隔5分钟不发言，才显示时间-->\r\n          <view class=\"time-lag\">\r\n            {{ renderMessageDate(message, index) }}\r\n          </view>\r\n          <view class=\"message-recalled\" v-if=\"message.recalled\">\r\n            <view v-if=\"message.recaller.id === currentUser.id\" class=\"message-recalled-self\">\r\n              <view>你撤回了一条消息</view>\r\n              <span v-if=\"message.type === 'text' && Date.now()-message.timestamp< 60 * 1000 \"\r\n                    @click=\"editRecalledMessage(message.payload.text)\">重新编辑</span>\r\n            </view>\r\n            <view v-else>{{ message.recaller.data.name }}撤回了一条消息</view>\r\n          </view>\r\n          <view class=\"message-item\" v-else>\r\n            <view class=\"message-item-checkbox\">\r\n              <checkbox v-show=\"messageSelector.visible && message.status !== 'sending'\" :value=\"message.messageId\"\r\n                        :checked=\"messageSelector.messages.includes(message)\"/>\r\n            </view>\r\n            <view class=\"message-item-content\" :class=\"{'self' : message.senderId ===  currentUser.id}\">\r\n              <view class=\"avatar\">\r\n                <image :src=\"message.senderId === currentUser.id? currentUser.avatar : friend.avatar\"></image>\r\n              </view>\r\n\r\n              <view class=\"content\" @click.right=\"showActionPopup(message)\" @longpress=\"showActionPopup(message)\">\r\n                <view class=\"message-payload\">\r\n                  <b class=\"pending\" v-if=\"message.status === 'sending'\"></b>\r\n                  <b class=\"send-fail\" v-if=\"message.status === 'fail'\"></b>\r\n                  <view v-if=\"message.type === 'text'\" class=\"text-content\" v-html=\"renderTextMessage(message)\"></view>\r\n                  <image v-if=\"message.type === 'image'\"\r\n                     :data-url=\"message.payload.url\"\r\n                     :src=\"message.payload.thumbnail\"\r\n                     class=\"image-content\"\r\n                     mode=\"heightFix\"\r\n                     @click=\"showImageFullScreen\"\r\n                  ></image>\r\n                  <view class=\"video-snapshot\" v-if=\"message.type === 'video'\" :data-url=\"message.payload.video.url\"\r\n                        @click=\"playVideo\">\r\n                    <image\r\n                      :src=\"message.payload.thumbnail.url\"\r\n                      :style=\"{height: getImageHeight(message.payload.thumbnail.width,message.payload.thumbnail.height)+'rpx' }\"\r\n                      mode=\"heightFix\"\r\n                    ></image>\r\n                    <view class=\"video-play-icon\"></view>\r\n                  </view>\r\n                  <view class=\"file-content\" v-if=\"message.type === 'file'\">\r\n                    <view class=\"file-info\">\r\n                      <span class=\"file-name\">{{ message.payload.name }}</span>\r\n                      <span class=\"file-size\">{{ (message.payload.size / 1024).toFixed(2) }}KB</span>\r\n                    </view>\r\n                    <image class=\"file-img\" src=\"http://182.61.31.42:1001/static/images/file-icon.png\"></image>\r\n                  </view>\r\n                  <view v-if=\"message.type ==='audio'\" class=\"audio-content\" @click=\"playAudio(message)\">\r\n                    <view class=\"audio-facade\" :style=\"{width:Math.ceil(message.payload.duration)*7 + 50 + 'px'}\">\r\n                      <view\r\n                        class=\"audio-facade-bg\"\r\n                        :class=\"{'play-icon':audioPlayer.playingMessage && audioPlayer.playingMessage.messageId === message.messageId}\"\r\n                      ></view>\r\n                      <view>{{Math.ceil(message.payload.duration) || 1}}<span>\"</span></view>\r\n                    </view>\r\n                  </view>\r\n                  <view v-if=\"message.type === 'order'\" class=\"order-content\">\r\n                    <view class=\"order-id\">订单号：{{ message.payload.id }}</view>\r\n                    <view class=\"order-body\">\r\n                      <image :src=\"message.payload.url\" class=\"order-img\"></image>\r\n                      <view>\r\n                        <view class=\"order-name\">{{ message.payload.name }}</view>\r\n                        <view class=\"order-info\">\r\n                          <view class=\"order-price\">{{ message.payload.price }}</view>\r\n                          <view class=\"order-count\">共{{ message.payload.count }}件</view>\r\n                        </view>\r\n                      </view>\r\n                    </view>\r\n                  </view>\r\n                </view>\r\n                <view v-if=\"message.senderId === currentUser.id\" :class=\"message.read ?'message-read':'message-unread'\">\r\n                  <view v-if=\"message.status === 'success'\">{{ message.read ? '已读' : '未读' }}</view>\r\n                </view>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </checkbox-group>\r\n    </view>\r\n    <view class=\"action-box\" v-if=\"!videoPlayer.visible && !messageSelector.visible\">\r\n      <view class=\"action-top\">\r\n        <view @click=\"switchAudioKeyboard\">\r\n          <image class=\"more\" v-if=\"audio.visible\" src=\"http://182.61.31.42:1001/static/images/jianpan.png\"></image>\r\n          <image class=\"more\" v-else src=\"http://182.61.31.42:1001/static/images/audio.png\"></image>\r\n        </view>\r\n        <view v-if=\"audio.visible\" class=\"record-input\" @touchend.stop=\"onRecordEnd\" @touchstart.stop=\"onRecordStart\">\r\n          {{ recorderManager.recording ? '松开发送' : '按住录音' }}\r\n        </view>\r\n        <!-- GoEasyIM最大支持3k的文本消息，如需发送长文本，需调整输入框maxlength值 -->\r\n        <input v-else v-model=\"text\" @confirm=\"sendTextMessage\" class=\"consult-input\" maxlength=\"700\" placeholder=\"发送消息\" type=\"text\" />\r\n        <view @click=\"switchEmojiKeyboard\">\r\n          <image class=\"more\" v-if=\"emoji.visible\" src=\"http://182.61.31.42:1001/static/images/jianpan.png\"></image>\r\n          <image class=\"more\" v-else src=\"http://182.61.31.42:1001/static/images/emoji.png\"></image>\r\n        </view>\r\n        <view>\r\n          <image @click=\"showOtherTypesMessagePanel()\" class=\"more\" src=\"http://182.61.31.42:1001/static/images/more.png\"/>\r\n        </view>\r\n        <view v-if=\"text\" class=\"send-btn-box\">\r\n          <text class=\"btn\" @click=\"sendTextMessage()\">发送</text>\r\n        </view>\r\n      </view>\r\n      <!--展示表情列表-->\r\n      <view class=\"action-bottom action-bottom-emoji\" v-if=\"emoji.visible\">\r\n        <image class=\"emoji-item\" v-for=\"(emojiItem, emojiKey, index) in emoji.map\" :key=\"index\"\r\n               :src=\"emoji.url + emojiItem\" @click=\"chooseEmoji(emojiKey)\"></image>\r\n      </view>\r\n      <!--其他类型消息面板-->\r\n      <view v-if=\"otherTypesMessagePanelVisible\" class=\"action-bottom\">\r\n        <view class=\"more-icon\">\r\n          <image @click=\"sendImageMessage()\" class=\"operation-icon\" src=\"http://182.61.31.42:1001/static/images/picture.png\"></image>\r\n          <view class=\"operation-title\">图片</view>\r\n        </view>\r\n        <view class=\"more-icon\">\r\n          <image @click=\"sendVideoMessage()\" class=\"operation-icon\" src=\"http://182.61.31.42:1001/static/images/video.png\"></image>\r\n          <view class=\"operation-title\">视频</view>\r\n        </view>\r\n        <view class=\"more-icon\">\r\n          <image @click=\"showOrderMessageList()\" class=\"operation-icon\" src=\"http://182.61.31.42:1001/static/images/order.png\"></image>\r\n          <view class=\"operation-title\">订单</view>\r\n        </view>\r\n        <!-- <view class=\"more-icon\">\r\n          <image @click=\"privateCall()\" class=\"operation-icon\" src=\"http://182.61.31.42:1001/static/images/rtc.png\"></image>\r\n          <view class=\"operation-title\">视频通话</view>\r\n        </view> -->\r\n      </view>\r\n    </view>\r\n    <view class=\"action-popup\" @touchmove.stop.prevent v-if=\"actionPopup.visible\">\r\n      <view class=\"layer\"></view>\r\n      <view class=\"action-list\">\r\n        <view class=\"action-item\" @click=\"deleteSingleMessage\">删除</view>\r\n        <view class=\"action-item\" v-if=\"actionPopup.recallable\" @click=\"recallMessage\">撤回</view>\r\n        <view class=\"action-item\" @click=\"showCheckBox\">多选</view>\r\n        <view class=\"action-item\" @click=\"hideActionPopup\">取消</view>\r\n      </view>\r\n    </view>\r\n    <view class=\"messageSelector-box\" v-if=\"messageSelector.visible\">\r\n      <image class=\"messageSelector-btn\" @click=\"deleteMultipleMessages\" src=\"http://182.61.31.42:1001/static/images/delete.png\"></image>\r\n    </view>\r\n    <view class=\"record-loading\" v-if=\"recorderManager.recording\"></view>\r\n    <video v-if=\"videoPlayer.visible\" :src=\"videoPlayer.url\" id=\"videoPlayer\"\r\n           @fullscreenchange=\"onVideoFullScreenChange\"></video>\r\n    <view v-if=\"orderList.visible\" class=\"order-list\">\r\n      <view class=\"orders-content\">\r\n        <view class=\"title\">\r\n          <view>请选择一个订单</view>\r\n          <view class=\"close\" @click=\"hideOrderMessageList\">×</view>\r\n        </view>\r\n        <view class=\"orders\">\r\n          <view\r\n            v-for=\"(order, index) in orderList.orders\"\r\n            :key=\"index\" class=\"order-item\"\r\n            @click=\"sendOrderMessage(order)\"\r\n          >\r\n            <view class=\"order-id\">订单号：{{ order.id }}</view>\r\n            <view class=\"order-body\">\r\n              <image :src=\"order.url\" class=\"order-img\"></image>\r\n              <view class=\"order-name\">{{ order.name }}</view>\r\n              <view class=\"order-right\">\r\n                <view class=\"order-price\">{{ order.price }}</view>\r\n                <view class=\"order-count\">共{{ order.count }}件</view>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\n  import EmojiDecoder from '@/lib/EmojiDecoder.js';\r\n  import restApi from '@/lib/restapi';\r\n  import {formatDate} from '@/lib/utils';\r\n  import RecorderManager from '@/lib/RecorderManager';\r\n\r\n  const IMAGE_MAX_WIDTH = 200;\r\n  const IMAGE_MAX_HEIGHT = 150;\r\n  const recorderManager = new RecorderManager();\r\n  const GoEasy = uni.$GoEasy;\r\n  // const GRTC = uni.$GRTC;\r\n  export default {\r\n    name: 'privateChat',\r\n    data() {\r\n      const emojiUrl = 'https://imgcache.qq.com/open/qcloud/tim/assets/emoji/';\r\n      const emojiMap = {\r\n        '[么么哒]': 'emoji_3@2x.png',\r\n        '[乒乓]': 'emoji_4@2x.png',\r\n        '[便便]': 'emoji_5@2x.png',\r\n        '[信封]': 'emoji_6@2x.png',\r\n        '[偷笑]': 'emoji_7@2x.png',\r\n        '[傲慢]': 'emoji_8@2x.png'\r\n      };\r\n      return {\r\n        //聊天文本框\r\n        text: '',\r\n        friend: null,\r\n        to: {},// 作为createMessage的参数\r\n        currentUser: null,\r\n\r\n        //定义表情列表\r\n        emoji: {\r\n          url: emojiUrl,\r\n          map: emojiMap,\r\n          visible: false,\r\n          decoder: new EmojiDecoder(emojiUrl, emojiMap),\r\n        },\r\n        //是否展示‘其他消息类型面板’\r\n        otherTypesMessagePanelVisible: false,\r\n        orderList: {\r\n          orders: [],\r\n          visible: false\r\n        },\r\n        history: {\r\n          messages: [],\r\n          allLoaded: false,\r\n          loading: false\r\n        },\r\n        recorderManager: recorderManager,\r\n        audio: {\r\n          //录音按钮展示\r\n          visible: false\r\n        },\r\n        audioPlayer: {\r\n          innerAudioContext: null,\r\n          playingMessage: null,\r\n        },\r\n        videoPlayer: {\r\n          visible: false,\r\n          url: '',\r\n          context: null\r\n        },\r\n        // 展示消息删除弹出框\r\n        actionPopup: {\r\n          visible: false,\r\n          message: null,\r\n          recallable: false,\r\n        },\r\n        // 消息选择\r\n        messageSelector: {\r\n          visible: false,\r\n          messages: []\r\n        }\r\n      }\r\n    },\r\n    onLoad(options) {\r\n      //聊天对象\r\n      this.friend = JSON.parse(options.to);\r\n\t  console.log('this.friend:', this.friend)\r\n\t  uni.$currentUser = uni.getStorageSync('currentUser');\r\n      this.currentUser = uni.$currentUser;\r\n\t  console.log('currentUser:', this.currentUser)\r\n      this.to = {\r\n        id: this.friend.id,\r\n        type: GoEasy.IM_SCENE.PRIVATE,\r\n        data: {\r\n          name: this.friend.name,\r\n          avatar: this.friend.avatar\r\n        }\r\n      };\r\n\r\n      this.initGoEasyListeners();\r\n      // 语音播放器\r\n      this.initialAudioPlayer();\r\n      // 录音监听器\r\n      this.initRecorderListeners();\r\n    },\r\n    onShow() {\r\n      this.otherTypesMessagePanelVisible = false;\r\n      this.emoji.visible = false;\r\n    },\r\n    onReady() {\r\n      this.loadHistoryMessage(true);\r\n      this.videoPlayer.context = uni.createVideoContext('videoPlayer', this);\r\n      // https://uniapp.dcloud.io/api/ui/navigationbar?id=setnavigationbartitle\r\n      uni.setNavigationBarTitle({ title: this.friend.name });\r\n    },\r\n    onPullDownRefresh(e) {\r\n      this.loadHistoryMessage(false);\r\n    },\r\n    onUnload() {\r\n      //退出聊天页面之前，清空监听器\r\n      GoEasy.im.off(GoEasy.IM_EVENT.PRIVATE_MESSAGE_RECEIVED, this.onMessageReceived);\r\n      GoEasy.im.off(GoEasy.IM_EVENT.MESSAGE_DELETED, this.onMessageDeleted);\r\n    },\r\n    methods: {\r\n      //渲染文本消息，如果包含表情，替换为图片\r\n      //todo:本不需要该方法，可以在标签里完成，但小程序有兼容性问题，被迫这样实现\r\n      renderTextMessage(message) {\r\n        return '<span>' + this.emoji.decoder.decode(message.payload.text) + '</span>'\r\n      },\r\n      //像微信那样显示时间，如果有几分钟没发消息了，才显示时间\r\n      //todo:本不需要该方法，可以在标签里完成，但小程序有兼容性问题，被迫这样实现\r\n      renderMessageDate(message, index) {\r\n        if (index === 0) {\r\n          return formatDate(message.timestamp)\r\n        } else {\r\n          if (message.timestamp - this.history.messages[index - 1].timestamp > 5 * 60 * 1000) {\r\n            return formatDate(message.timestamp)\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      initGoEasyListeners() {\r\n        // 监听私聊消息\r\n        GoEasy.im.on(GoEasy.IM_EVENT.PRIVATE_MESSAGE_RECEIVED, this.onMessageReceived);\r\n        //监听消息删除\r\n        GoEasy.im.on(GoEasy.IM_EVENT.MESSAGE_DELETED, this.onMessageDeleted);\r\n      },\r\n      onMessageReceived (message) {\r\n        let senderId = message.senderId;\r\n        let receiverId = message.receiverId;\r\n        let friendId = this.currentUser.id === senderId ? receiverId : senderId;\r\n        if (friendId === this.friend.id) {\r\n          this.history.messages.push(message);\r\n          //聊天时，收到消息标记为已读\r\n          this.markPrivateMessageAsRead();\r\n          //收到新消息，是滚动到最底部\r\n          this.scrollToBottom();\r\n        }\r\n      },\r\n      onMessageDeleted (deletedMessages) {\r\n        deletedMessages.forEach(message => {\r\n          let senderId = message.senderId;\r\n          let receiverId = message.receiverId;\r\n          let friendId = this.currentUser.id === senderId ? receiverId : senderId;\r\n          if (friendId === this.friend.id) {\r\n            let index = this.history.messages.indexOf(message);\r\n            if (index > -1) {\r\n              this.history.messages.splice(index, 1);\r\n            }\r\n          }\r\n        });\r\n      },\r\n      initialAudioPlayer () {\r\n        this.audioPlayer.innerAudioContext = uni.createInnerAudioContext();\r\n        this.audioPlayer.innerAudioContext.onEnded(() => {\r\n          this.audioPlayer.playingMessage = null;\r\n        });\r\n        this.audioPlayer.innerAudioContext.onStop(() => {\r\n          this.audioPlayer.playingMessage = null;\r\n        });\r\n      },\r\n      initRecorderListeners() {\r\n        recorderManager.onRecordComplete((file, duration) => {\r\n          if (duration < 1000) {\r\n            uni.showToast({\r\n              icon: 'none',\r\n              title: '录音时间太短',\r\n              duration: 500\r\n            });\r\n            return;\r\n          }\r\n          GoEasy.im.createAudioMessage({\r\n            to: this.to,\r\n            file: file,\r\n            notification: {\r\n              title: this.currentUser.name + '发来一段语音',\r\n              body: '[语音消息]',\t\t// 字段最长 50 字符\r\n              sound: 'message',\r\n              badge: '+1'\r\n            },\r\n            onProgress: function (progress) {\r\n              console.log(progress)\r\n            },\r\n            onSuccess: (message) => {\r\n              this.sendMessage(message);\r\n            },\r\n            onFailed: (e) => {\r\n              console.log('error :', e);\r\n            }\r\n          });\r\n        });\r\n      },\r\n      /**\r\n       * 核心就是设置高度，产生明确占位\r\n       *\r\n       * 小  (宽度和高度都小于预设尺寸)\r\n       *    设高=原始高度\r\n       * 宽 (宽度>高度)\r\n       *    高度= 根据宽度等比缩放\r\n       * 窄  (宽度<高度)或方(宽度=高度)\r\n       *    设高=MAX height\r\n       *\r\n       * @param width,height\r\n       * @returns number\r\n       */\r\n      getImageHeight(width, height) {\r\n        if (width < IMAGE_MAX_WIDTH && height < IMAGE_MAX_HEIGHT) {\r\n          return height * 2;\r\n        } else if (width > height) {\r\n          return (IMAGE_MAX_WIDTH / width * height) * 2;\r\n        } else if (width === height || width < height) {\r\n          return IMAGE_MAX_HEIGHT * 2;\r\n        }\r\n      },\r\n      sendMessage(message) {\r\n        this.history.messages.push(message);\r\n        this.scrollToBottom();\r\n        GoEasy.im.sendMessage({\r\n          message: message,\r\n          onSuccess: function (message) {\r\n            console.log('发送成功.', message);\r\n          },\r\n          onFailed: function (error) {\r\n            if (error.code === 507) {\r\n              console.log('发送语音/图片/视频/文件失败，没有配置OSS存储，详情参考：https://docs.goeasy.io/2.x/im/message/media/alioss');\r\n            } else {\r\n              console.log('发送失败:', error);\r\n            }\r\n          }\r\n        });\r\n      },\r\n      sendTextMessage() {\r\n        if (this.text.trim() !== '') {\r\n          let body = this.text;\r\n          if (this.text.length >= 50) {\r\n            body = this.text.substring(0, 30) + '...';\r\n          }\r\n          GoEasy.im.createTextMessage({\r\n            text: this.text,\r\n            to: this.to,\r\n            notification: {\r\n              title: this.currentUser.name + '发来一段文字',\r\n              body: body,\r\n              sound: 'message',\r\n              badge: '+1'\r\n            },\r\n            onSuccess: (message) => {\r\n              this.sendMessage(message);\r\n            },\r\n            onFailed: (e) => {\r\n              console.log('error :', e);\r\n            }\r\n          });\r\n        }\r\n        this.text = '';\r\n      },\r\n      sendVideoMessage() {\r\n        uni.chooseVideo({\r\n          success: (res) => {\r\n            GoEasy.im.createVideoMessage({\r\n              to: this.to,\r\n              file: res,\r\n              notification: {\r\n                title: this.currentUser.name + '发来一个视频',\r\n                body: '[视频消息]',\t\t// 字段最长 50 字符\r\n                sound: 'message',\r\n                badge: '+1'\r\n              },\r\n              onProgress: function (progress) {\r\n                console.log(progress)\r\n              },\r\n              onSuccess: (message) => {\r\n                this.otherTypesMessagePanelVisible = false;\r\n                this.sendMessage(message);\r\n              },\r\n              onFailed: (e) => {\r\n                console.log('error :', e);\r\n              }\r\n            });\r\n          }\r\n        })\r\n      },\r\n      sendImageMessage() {\r\n        uni.chooseImage({\r\n          count: 9,\r\n          success: (res) => {\r\n            res.tempFiles.forEach(file => {\r\n              GoEasy.im.createImageMessage({\r\n                to: this.to,\r\n                file: file,\r\n                notification: {\r\n                  title: this.currentUser.name + '发来一张图片',\r\n                  body: '[图片消息]',\t\t// 字段最长 50 字符\r\n                  sound: 'message',\r\n                  badge: '+1'\r\n                },\r\n                onProgress: function (progress) {\r\n                  console.log(progress)\r\n                },\r\n                onSuccess: (message) => {\r\n                  this.otherTypesMessagePanelVisible = false;\r\n                  this.sendMessage(message);\r\n                },\r\n                onFailed: (e) => {\r\n                  console.log('error :', e);\r\n                }\r\n              });\r\n            })\r\n          }\r\n        });\r\n      },\r\n      sendOrderMessage(order) {\r\n        //GoEasyIM自定义消息,实现订单发送\r\n        GoEasy.im.createCustomMessage({\r\n          type: 'order',\r\n          payload: order,\r\n          to: this.to,\r\n          notification: {\r\n            title: this.currentUser.name + '发来一个订单',\r\n            body: '[订单消息]',\r\n            sound: 'message',\r\n            badge: '+1'\r\n          },\r\n          onSuccess: (message) => {\r\n            this.otherTypesMessagePanelVisible = false;\r\n            this.sendMessage(message);\r\n          },\r\n          onFailed: (e) => {\r\n            console.log('error :', e);\r\n          }\r\n        });\r\n        this.orderList.visible = false;\r\n      },\r\n      showActionPopup(message) {\r\n        const MAX_RECALLABLE_TIME = 3 * 60 * 1000; //3分钟以内的消息才可以撤回\r\n        this.messageSelector.messages = [message];\r\n        if ((Date.now() - message.timestamp) < MAX_RECALLABLE_TIME && message.senderId === this.currentUser.id && message.status === 'success') {\r\n          this.actionPopup.recallable = true;\r\n        } else {\r\n          this.actionPopup.recallable = false;\r\n        }\r\n        this.actionPopup.visible = true;\r\n      },\r\n      hideActionPopup () {\r\n        this.actionPopup.visible = false;\r\n        this.actionPopup.message = null;\r\n      },\r\n      deleteSingleMessage() {\r\n        uni.showModal({\r\n          content: '确认删除？',\r\n          success: (res) => {\r\n            this.actionPopup.visible = false;\r\n            if (res.confirm) {\r\n              this.deleteMessage();\r\n            }\r\n          },\r\n        })\r\n      },\r\n      deleteMultipleMessages() {\r\n        if (this.messageSelector.messages.length > 0) {\r\n          uni.showModal({\r\n            content: '确认删除？',\r\n            success: (res) => {\r\n              this.messageSelector.visible = false;\r\n              if (res.confirm) {\r\n                this.deleteMessage();\r\n              }\r\n            },\r\n          })\r\n        }\r\n      },\r\n      deleteMessage() {\r\n        GoEasy.im.deleteMessage({\r\n          messages: this.messageSelector.messages,\r\n          onSuccess: (result) => {\r\n            this.messageSelector.messages.forEach(message => {\r\n              let index = this.history.messages.indexOf(message);\r\n              if (index > -1) {\r\n                this.history.messages.splice(index, 1);\r\n              }\r\n            });\r\n            this.messageSelector.messages = [];\r\n          },\r\n          onFailed: (error) => {\r\n            console.log('error:', error);\r\n          }\r\n        });\r\n      },\r\n      recallMessage() {\r\n        this.actionPopup.visible = false;\r\n        GoEasy.im.recallMessage({\r\n          messages: this.messageSelector.messages,\r\n          onSuccess: () => {\r\n            console.log('撤回成功');\r\n          },\r\n          onFailed: (error) => {\r\n            console.log('撤回失败,error:', error);\r\n          }\r\n        });\r\n      },\r\n      editRecalledMessage(text) {\r\n        if (this.audio.visible) {\r\n          this.audio.visible = false;\r\n        }\r\n        this.text = text;\r\n      },\r\n      showCheckBox() {\r\n        this.messageSelector.messages = [];\r\n        this.messageSelector.visible = true;\r\n        this.actionPopup.visible = false;\r\n      },\r\n      selectMessages(e) {\r\n        const selectedMessageIds = e.detail.value;\r\n        let selectedMessages = [];\r\n        this.history.messages.forEach(message => {\r\n          if (selectedMessageIds.includes(message.messageId)) {\r\n            selectedMessages.push(message);\r\n          }\r\n        })\r\n        this.messageSelector.messages = selectedMessages;\r\n      },\r\n      loadHistoryMessage(scrollToBottom) {//历史消息\r\n        this.history.loading = true;\r\n        let lastMessageTimeStamp = null;\r\n        let lastMessage = this.history.messages[0];\r\n        if (lastMessage) {\r\n          lastMessageTimeStamp = lastMessage.timestamp;\r\n        }\r\n        GoEasy.im.history({\r\n          userId: this.friend.id,\r\n          lastTimestamp: lastMessageTimeStamp,\r\n          limit: 10,\r\n          onSuccess: (result) => {\r\n            uni.stopPullDownRefresh();\r\n            this.history.loading = false;\r\n            let messages = result.content;\r\n            if (messages.length === 0) {\r\n              this.history.allLoaded = true;\r\n            } else {\r\n              if (lastMessageTimeStamp) {\r\n                this.history.messages = messages.concat(this.history.messages);\r\n              } else {\r\n                this.history.messages = messages;\r\n              }\r\n              if (messages.length < 10) {\r\n                this.history.allLoaded = true;\r\n              }\r\n              if (scrollToBottom) {\r\n                this.scrollToBottom();\r\n                //收到的消息设置为已读\r\n                this.markPrivateMessageAsRead();\r\n              }\r\n            }\r\n          },\r\n          onFailed: (error) => {\r\n            //获取失败\r\n            console.log('获取历史消息失败:', error);\r\n            uni.stopPullDownRefresh();\r\n            this.history.loading = false;\r\n          }\r\n        });\r\n      },\r\n      //语音录制按钮和键盘输入的切换\r\n      switchAudioKeyboard() {\r\n        this.audio.visible = !this.audio.visible;\r\n        if (this.audio.visible) {\r\n          recorderManager.authorize().then(() => {\r\n            console.log('录音权限获取成功');\r\n          }).catch((err) => {\r\n            console.log('err:', err)\r\n            uni.showModal({\r\n              title: '获取录音权限失败',\r\n              content: err\r\n            });\r\n          });\r\n        }\r\n      },\r\n      onRecordStart() {\r\n        recorderManager.start();\r\n      },\r\n      onRecordEnd() {\r\n        recorderManager.stop();\r\n      },\r\n      showImageFullScreen(e) {\r\n        let imagesUrl = [e.currentTarget.dataset.url];\r\n        uni.previewImage({\r\n          urls: imagesUrl\r\n        });\r\n      },\r\n      playVideo(e) {\r\n        this.videoPlayer.visible = true;\r\n        this.videoPlayer.url = e.currentTarget.dataset.url;\r\n        this.$nextTick(() => {\r\n          this.videoPlayer.context.requestFullScreen({\r\n            direction: 0\r\n          });\r\n          this.videoPlayer.context.play();\r\n        });\r\n      },\r\n      playAudio (audioMessage) {\r\n        let playingMessage = this.audioPlayer.playingMessage;\r\n\r\n        if (playingMessage) {\r\n          this.audioPlayer.innerAudioContext.stop();\r\n          // 如果点击的消息正在播放，就认为是停止播放操作\r\n          if (playingMessage === audioMessage) {\r\n            return;\r\n          }\r\n        }\r\n        this.audioPlayer.playingMessage = audioMessage;\r\n        this.audioPlayer.innerAudioContext.src = audioMessage.payload.url;\r\n        this.audioPlayer.innerAudioContext.play();\r\n      },\r\n      onVideoFullScreenChange(e) {\r\n        //当退出全屏播放时，隐藏播放器\r\n        if (this.videoPlayer.visible && !e.detail.fullScreen) {\r\n          this.videoPlayer.visible = false;\r\n          this.videoPlayer.context.stop();\r\n        }\r\n      },\r\n      messageInputFocusin() {\r\n        this.otherTypesMessagePanelVisible = false;\r\n        this.emoji.visible = false;\r\n      },\r\n      switchEmojiKeyboard() {\r\n        this.emoji.visible = !this.emoji.visible;\r\n        this.otherTypesMessagePanelVisible = false;\r\n      },\r\n      showOtherTypesMessagePanel() {\r\n        this.otherTypesMessagePanelVisible = !this.otherTypesMessagePanelVisible;\r\n        this.emoji.visible = false;\r\n      },\r\n      chooseEmoji(emojiKey) {\r\n        this.text += emojiKey;\r\n      },\r\n      showOrderMessageList() {\r\n        this.orderList.orders = restApi.getOrderList();\r\n        this.orderList.visible = true;\r\n      },\r\n      hideOrderMessageList() {\r\n        this.orderList.visible = false;\r\n      },\r\n      privateCall() {\r\n        uni.showActionSheet({\r\n          itemList: ['视频通话', '音频通话'],\r\n          success: (res) => {\r\n            const mediaType = res.tapIndex === 0 ? 1 : 0;\r\n            const notificationBody = res.tapIndex === 0 ? '邀请你视频通话' : '邀请你语音通话';\r\n            GRTC.call({\r\n              calleeId: this.friend.id,\r\n              mediaType: mediaType,\r\n              notification: {\r\n                title: this.currentUser.name,\r\n                body: notificationBody,\r\n                sound: 'ring',\r\n                badge: '+1'\r\n              },\r\n            }).then(() => {\r\n              uni.navigateTo({\r\n                url: `./rtc/private/dial`,\r\n              })\r\n            }).catch((error)=>{\r\n              console.log(\"呼叫失败:\", error);\r\n              uni.showToast({\r\n                icon: \"error\",\r\n                title: \"呼叫失败:\" + error,\r\n                duration: 2000\r\n              })\r\n            })\r\n          },\r\n          fail: (res) => {\r\n            console.log(res.errMsg);\r\n          }\r\n        });\r\n      },\r\n      scrollToBottom() {\r\n        this.$nextTick(() => {\r\n          uni.pageScrollTo({\r\n            scrollTop: 2000000,\r\n            duration: 0\r\n          });\r\n        });\r\n      },\r\n      markPrivateMessageAsRead() {\r\n        GoEasy.im.markMessageAsRead({\r\n          id: this.to.id,\r\n          type: this.to.type,\r\n          onSuccess: function () {\r\n            console.log('标记私聊已读成功');\r\n          },\r\n          onFailed: function (error) {\r\n            console.log(\"标记私聊已读失败\", error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  @import url('/static/style/chatInterface.css');\r\n</style>\r\n","import mod from \"-!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./privateChat.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\HBuilderX.2.7.14.20200618.full\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./privateChat.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1717508616302\n      var cssReload = require(\"E:/HBuilderX.2.7.14.20200618.full/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"/\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}